// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TareasApp.Models;

namespace TareasApp.Migrations
{
    [DbContext(typeof(DtBusinessContext))]
    partial class DtBusinessContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TareasApp.Models.CatalagoEstatus", b =>
                {
                    b.Property<int>("IdEstatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdEstatus");

                    b.ToTable("CatalagoEstatus");
                });

            modelBuilder.Entity("TareasApp.Models.CatalagoTipoUsuario", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdTipoUsuario");

                    b.ToTable("CatalagoTipoUsuarios");
                });

            modelBuilder.Entity("TareasApp.Models.CategoriaTarea", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCategoria");

                    b.ToTable("CategoriaTareas");
                });

            modelBuilder.Entity("TareasApp.Models.Estatus", b =>
                {
                    b.Property<int>("IdEstatusUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdEstatusUsuario");

                    b.ToTable("Estatus");
                });

            modelBuilder.Entity("TareasApp.Models.Tarea", b =>
                {
                    b.Property<int>("IdTarea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaTerminacion")
                        .HasColumnType("date");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdTarea");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdStatus");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Tareas");
                });

            modelBuilder.Entity("TareasApp.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("IdEstatusUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdEstatusUsuario");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TareasApp.Models.Tarea", b =>
                {
                    b.HasOne("TareasApp.Models.CategoriaTarea", "IdCategoriaNavigation")
                        .WithMany("Tareas")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK_Tareas_CategoriaTareas")
                        .IsRequired();

                    b.HasOne("TareasApp.Models.CatalagoEstatus", "IdStatusNavigation")
                        .WithMany("Tareas")
                        .HasForeignKey("IdStatus")
                        .HasConstraintName("FK_Tareas_CatalagoEstatus")
                        .IsRequired();

                    b.HasOne("TareasApp.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Tareas")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_Tareas_Usuarios")
                        .IsRequired();

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdStatusNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("TareasApp.Models.Usuario", b =>
                {
                    b.HasOne("TareasApp.Models.Estatus", "IdEstatusUsuarioNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEstatusUsuario")
                        .HasConstraintName("FK_Usuarios_Estatus")
                        .IsRequired();

                    b.HasOne("TareasApp.Models.CatalagoTipoUsuario", "IdTipoUsuarioNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipoUsuario")
                        .HasConstraintName("FK_Usuarios_CatalagoTipoUsuarios")
                        .IsRequired();

                    b.Navigation("IdEstatusUsuarioNavigation");

                    b.Navigation("IdTipoUsuarioNavigation");
                });

            modelBuilder.Entity("TareasApp.Models.CatalagoEstatus", b =>
                {
                    b.Navigation("Tareas");
                });

            modelBuilder.Entity("TareasApp.Models.CatalagoTipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("TareasApp.Models.CategoriaTarea", b =>
                {
                    b.Navigation("Tareas");
                });

            modelBuilder.Entity("TareasApp.Models.Estatus", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("TareasApp.Models.Usuario", b =>
                {
                    b.Navigation("Tareas");
                });
#pragma warning restore 612, 618
        }
    }
}
